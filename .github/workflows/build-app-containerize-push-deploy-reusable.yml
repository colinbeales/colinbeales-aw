name: .NET CI and Containerize and Push and CD - Reusable

env:
  dockerFolderPath: ./Application/src/RazorPagesTestSample
  tag: ${{github.run_number}}
  registryName: ${{ vars.REGISTRY_NAME }}
  repositoryName: ${{ vars.REPOSITORY_NAME }}
  
on:
  push:
    branches: [ main ]
    paths:
      - 'Application/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'Application/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 3.1
    
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Build
      run: dotnet build --no-restore ./Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
    - name: Test
      run: dotnet test --no-build --verbosity normal ./Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj
      
  dockerBuildPush:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@v2
      uses: docker/login-action@v2
      with:
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: ${{ vars.REGISTRY_NAME }}
        # Username used to log against the Docker registry
        username: ${{ vars.ACR_USERNAME }}
        # Password or personal access token used to log against the Docker registry
        password: ${{ secrets.ACR_PASSWORD }}
        # Log out from the Docker registry at the end of a job
        logout: true
        
    - name: Docker Build
      run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath
      
    - name: Docker Push
      run: docker push $registryName/$repositoryName:$tag

            
  deploy_dev:
    needs: dockerBuildPush
    uses: colinbeales/colinbeales-aw/.github/workflows/deploy-reusable.yml@main
    with:
      environment: dev
      webappUrl: https://colinbeales-aw-dev.azurewebsites.net/
      registryName: ${{ vars.REGISTRY_NAME }}
      repositoryName: ${{ vars.REPOSITORY_NAME }}
    secrets: inherit

  deploy_test:
    needs: dockerBuildPush
    uses: colinbeales/colinbeales-aw/.github/workflows/deploy-reusable.yml@main
    with:
      environment: test
      webappUrl: https://colinbeales-aw-test.azurewebsites.net/
      registryName: ${{ vars.REGISTRY_NAME }}
      repositoryName: ${{ vars.REPOSITORY_NAME }}
    secrets: inherit

  deploy_prod:
    needs: dockerBuildPush
    uses: colinbeales/colinbeales-aw/.github/workflows/deploy-reusable.yml@main
    with:
      environment: prod
      webappUrl: https://colinbeales-aw-prod.azurewebsites.net/
      registryName: ${{ vars.REGISTRY_NAME }}
      repositoryName: ${{ vars.REPOSITORY_NAME }}
    secrets: inherit
    